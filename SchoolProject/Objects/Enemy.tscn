[gd_scene load_steps=11 format=2]

[ext_resource path="res://Assets/enemy1.png" type="Texture" id=2]
[ext_resource path="res://Assets/enemyattack.png" type="Texture" id=4]
[ext_resource path="res://Assets/enemyattack2.png" type="Texture" id=5]
[ext_resource path="res://Assets/enemydeath1.png" type="Texture" id=6]
[ext_resource path="res://Assets/enemydeath3.png" type="Texture" id=7]
[ext_resource path="res://Assets/enemydeath2.png" type="Texture" id=8]
[ext_resource path="res://Health.tscn" type="PackedScene" id=9]

[sub_resource type="GDScript" id=4]
script/source = "extends KinematicBody2D
var destination
var speed = 100
var velocity
var player
var maxcooldown = 100
var cooldown = maxcooldown
var projectile = load(\"res://Objects/Projectile.tscn\")
var sprite
func _ready():
	randomize()
	player = get_parent().get_node(\"Player\")
	get_node(\"sprite\").connect(\"animation_finished\",self,\"reset_anim\")
	sprite = get_node(\"sprite\")
func _physics_process(delta):
	if get_parent().playerdied == false:
		var y_move = sin(position.angle_to_point(player.position)) * speed
		var x_move = cos(position.angle_to_point(player.position)) * speed
		velocity = Vector2(-x_move,-y_move)
		
		cooldown -= 1

		if get_node(\"sprite\").animation != \"attack\" and get_node(\"sprite\").animation != \"death\" :
			if position.distance_to(player.position) > 125:
				print(\"walk\")
				get_node(\"sprite\").animation = \"walk\"
				move_and_slide(velocity)
			else:
				print(\"default\")
				get_node(\"sprite\").animation = \"default\"
		if cooldown <= 0 and position.distance_to(player.position) < 125 and get_node(\"sprite\").animation != \"death\":
			get_node(\"sprite\").animation = \"attack\"
			cooldown = maxcooldown
			
			var proj = projectile.instance()
			proj.caller_name = \"Enemy\"
			proj.get_node(\"sprite\").flip_h = !sprite.flip_h
			get_parent().add_child(proj)
			if sprite.flip_h:
				proj.position = position + Vector2(100,0)
			else:
				proj.position = position + Vector2(-100,0)
		
		if x_move <= 0:
			get_node(\"sprite\").flip_h = true
		else:
			get_node(\"sprite\").flip_h = false
		
		if get_node(\"Health\").value <= 0 and get_node(\"sprite\").animation != \"death\":
			get_node(\"sprite\").animation = \"death\"
			yield (get_tree().create_timer(1),\"timeout\")
			queue_free()
func reset_anim():
	if get_node(\"sprite\").animation == \"attack\":
		get_node(\"sprite\").animation = \"default\"
	if get_node(\"sprite\").animation == \"death\":
		queue_free()
"

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 5 ) ],
"loop": true,
"name": "attack",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ), ExtResource( 8 ), ExtResource( 7 ) ],
"loop": true,
"name": "death",
"speed": 5.0
}, {
"frames": [ ExtResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=2]
radius = 50.0

[node name="Enemy" type="KinematicBody2D"]
position = Vector2( 499, 331 )
script = SubResource( 4 )

[node name="sprite" type="AnimatedSprite" parent="."]
frames = SubResource( 3 )
playing = true

[node name="hitbox" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Health" parent="." instance=ExtResource( 9 )]
margin_left = -36.0
margin_top = -55.0
margin_right = 36.0
margin_bottom = -43.0
